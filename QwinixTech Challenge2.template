{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Qwinix Tech Challenge review: Joseph Villarreal Lopez",
  "Parameters": {
    "InstanceType": {
      "Description": "Allowed EC2 instance types",
      "Type": "String",
      "Default": "t1.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.micro",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "r3.large"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "m1.small": {
        "Arch": "PV64"
      },
      "m1.medium": {
        "Arch": "PV64"
      },
      "m1.large": {
        "Arch": "PV64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "c1.medium": {
        "Arch": "PV64"
      },
      "r3.large": {
        "Arch": "HVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "PV64": "ami-50842d38",
        "HVM64": "ami-08842d60",
        "HVMG2": "ami-3a329952"
      },
      "us-west-2": {
        "PV64": "ami-af86c69f",
        "HVM64": "ami-8786c6b7",
        "HVMG2": "ami-47296a77"
      },
      "us-west-1": {
        "PV64": "ami-c7a8a182",
        "HVM64": "ami-cfa8a18a",
        "HVMG2": "ami-331b1376"
      },
      "eu-west-1": {
        "PV64": "ami-aa8f28dd",
        "HVM64": "ami-748e2903",
        "HVMG2": "ami-00913777"
      },
      "ap-southeast-1": {
        "PV64": "ami-20e1c572",
        "HVM64": "ami-d6e1c584",
        "HVMG2": "ami-fabe9aa8"
      },
      "ap-northeast-1": {
        "PV64": "ami-21072820",
        "HVM64": "ami-35072834",
        "HVMG2": "ami-5dd1ff5c"
      },
      "ap-southeast-2": {
        "PV64": "ami-8b4724b1",
        "HVM64": "ami-fd4724c7",
        "HVMG2": "ami-e98ae9d3"
      },
      "sa-east-1": {
        "PV64": "ami-9d6cc680",
        "HVM64": "ami-956cc688",
        "HVMG2": "NOT_SUPPORTED"
      },
      "cn-north-1": {
        "PV64": "ami-a857c591",
        "HVM64": "ami-ac57c595",
        "HVMG2": "NOT_SUPPORTED"
      },
      "eu-central-1": {
        "PV64": "ami-a03503bd",
        "HVM64": "ami-b43503a9",
        "HVMG2": "ami-b03503ad"
      }
    }
  },
  "Conditions": {
    "Is-EC2-VPC": {
      "Fn::Or": [{
        "Fn::Equals": [{
            "Ref": "AWS::Region"
          },
          "eu-central-1"
        ]
      }, {
        "Fn::Equals": [{
            "Ref": "AWS::Region"
          },
          "cn-north-1"
        ]
      }, {
        "Fn::Equals": [{
            "Ref": "AWS::Region"
          },
          "ap-northeast-2"
        ]
      }]
    },
    "Is-EC2-Classic": {
      "Fn::Not": [{
        "Condition": "Is-EC2-VPC"
      }]
    }
  },
  "Resources": {
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LBCookieStickinessPolicy": [{
          "PolicyName": "CookieBasedPolicy",
          "CookieExpirationPeriod": "30"
        }],
        "Listeners": [{
          "LoadBalancerPort": "80",
          "InstancePort": "80",
          "Protocol": "HTTP",
          "PolicyNames": [
            "CookieBasedPolicy"
          ]
        }],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "5",
          "Interval": "10",
          "Timeout": "5"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "f3e12dae-10f9-4568-9071-ce928a025906"
        }
      }
    },
    "WebServerGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "3",
        "MaxSize": "4",
        "DesiredCapacity": "3",
        "LoadBalancerNames": [{
          "Ref": "ElasticLoadBalancer"
        }],
        "Tags": [{
          "Key": "MyTag",
          "Value": "joseph_tesat",
          "PropagateAtLaunch": "true"
        }]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT5M",
          "Count": "3"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT15M",
          "WaitOnResourceSignals": "true"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b0f32149-1c22-4a1a-8050-1afa73f4d2b4"
        }
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment1": "Configure the bootstrap helpers to install the Apache Web Server and PHP",
        "Comment2": "The website content is downloaded from the CloudFormationPHPSample.zip file",
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "httpd": [],
                "php": [],
                "php-mysql": []
              }
            },
            "files": {
              "/var/www/html/index.php": {
                "content": {
                  "Fn::Join": [
                    "", [
                      "<html>\n",
                      "  <head>\n",
                      "    <title>Qwinix Tech Challenge</title>\n",
                      "    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n",
                      "  </head>\n",
                      "  <body>\n",
                      "    <h1>Hello world</h1>\n",
                      "  </body>\n",
                      "</html>\n"
                    ]
                  ]
                },
                "mode": "000600",
                "owner": "apache",
                "group": "apache"
              },
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "", [
                      "[main]\n",
                      "stack=", {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=", {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "", [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ", {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource LaunchConfig ",
                      "         --region ", {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              }
            },
            "services": {
              "sysvinit": {
                "httpd": {
                  "enabled": "true",
                  "ensureRunning": "true"
                },
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        },
        "AWS::CloudFormation::Designer": {
          "id": "0f63267e-d82b-4937-b049-40823fdea465"
        }
      },
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI", {
              "Ref": "AWS::Region"
            }, {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch", {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [{
          "Ref": "WebServerSecurityGroup"
        }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "", [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "# Install the files and packages from the metadata\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ", {
                  "Ref": "AWS::StackName"
                },
                "         --resource LaunchConfig ",
                "         --region ", {
                  "Ref": "AWS::Region"
                },
                "\n",
                "# Signal the status from cfn-init\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ", {
                  "Ref": "AWS::StackName"
                },
                "         --resource WebServerGroup ",
                "         --region ", {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access via port 80 locked down to the ELB and SSH access",
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "SourceSecurityGroupOwnerId": {
            "Fn::GetAtt": [
              "ElasticLoadBalancer",
              "SourceSecurityGroup.OwnerAlias"
            ]
          },
          "SourceSecurityGroupName": {
            "Fn::GetAtt": [
              "ElasticLoadBalancer",
              "SourceSecurityGroup.GroupName"
            ]
          }
        }, {
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "0.0.0.0/0"
        }]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "914d06dc-c71a-4470-bb25-b9e6763dc6db"
        }
      }
    },
    "DBEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "Is-EC2-VPC",
      "Properties": {
        "GroupDescription": "Open database for access",
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "3306",
          "ToPort": "3306",
          "SourceSecurityGroupName": {
            "Ref": "WebServerSecurityGroup"
          }
        }]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "eea79b4c-1d3d-4cc5-b043-88f620a94045"
        }
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Condition": "Is-EC2-Classic",
      "Properties": {
        "DBSecurityGroupIngress": {
          "EC2SecurityGroupName": {
            "Ref": "WebServerSecurityGroup"
          }
        },
        "GroupDescription": "database access"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "615715d6-7362-4ab1-a3ed-a462a20196bc"
        }
      }
    },
    "MySQLDatabase": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "MySQL",
        "DBName": "DBName",
        "MultiAZ": "true",
        "MasterUsername": "DBUser",
        "MasterUserPassword": "DBPassword1",
        "DBInstanceClass": "db.t2.small",
        "AllocatedStorage": "5",
        "VPCSecurityGroups": {
          "Fn::If": [
            "Is-EC2-VPC", [{
              "Fn::GetAtt": [
                "DBEC2SecurityGroup",
                "GroupId"
              ]
            }], {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBSecurityGroups": {
          "Fn::If": [
            "Is-EC2-Classic", [{
              "Ref": "DBSecurityGroup"
            }], {
              "Ref": "AWS::NoValue"
            }
          ]
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "9cddbb54-0bb3-4f46-848c-6737907fad75"
        }
      }
    },
    "WebServerScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "WebServerGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "1"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "f537b5a1-831e-459e-a3dc-3f747ae4dbdc"
        }
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "80",
        "AlarmActions": [{
          "Ref": "WebServerScaleUpPolicy"
        }],
        "Dimensions": [{
          "Name": "AutoScalingGroupName",
          "Value": {
            "Ref": "WebServerGroup"
          }
        }],
        "ComparisonOperator": "GreaterThanThreshold"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "5a5ef7ba-547f-46db-998a-11c450aeeb03"
        }
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead"
      },
      "BucketName": "CloudFormateds3",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "619135e8-68f4-4236-a590-4ac50b07d936"
        }
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Description": "URL for newly created LAMP stack",
      "Value": {
        "Fn::Join": [
          "", [
            "http://", {
              "Fn::GetAtt": [
                "ElasticLoadBalancer",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "f3e12dae-10f9-4568-9071-ce928a025906": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 270
        },
        "z": 1,
        "embeds": []
      },
      "914d06dc-c71a-4470-bb25-b9e6763dc6db": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 80,
          "y": 180
        },
        "z": 1,
        "embeds": [],
        "isrelatedto": [
          "f3e12dae-10f9-4568-9071-ce928a025906"
        ]
      },
      "615715d6-7362-4ab1-a3ed-a462a20196bc": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 30,
          "y": 270
        },
        "z": 1,
        "embeds": [],
        "isrelatedto": [
          "914d06dc-c71a-4470-bb25-b9e6763dc6db"
        ]
      },
      "eea79b4c-1d3d-4cc5-b043-88f620a94045": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 150,
          "y": 70
        },
        "z": 1,
        "embeds": [],
        "isrelatedto": [
          "914d06dc-c71a-4470-bb25-b9e6763dc6db"
        ]
      },
      "9cddbb54-0bb3-4f46-848c-6737907fad75": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": -80,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "615715d6-7362-4ab1-a3ed-a462a20196bc"
        ],
        "isrelatedto": [
          "eea79b4c-1d3d-4cc5-b043-88f620a94045"
        ]
      },
      "0f63267e-d82b-4937-b049-40823fdea465": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 260,
          "y": 50
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "914d06dc-c71a-4470-bb25-b9e6763dc6db"
        ]
      },
      "b0f32149-1c22-4a1a-8050-1afa73f4d2b4": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 360,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "isconnectedto": [
          "f3e12dae-10f9-4568-9071-ce928a025906"
        ],
        "isassociatedwith": [
          "0f63267e-d82b-4937-b049-40823fdea465"
        ]
      },
      "f537b5a1-831e-459e-a3dc-3f747ae4dbdc": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 360,
          "y": 270
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "b0f32149-1c22-4a1a-8050-1afa73f4d2b4"
        ]
      },
      "5a5ef7ba-547f-46db-998a-11c450aeeb03": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 450,
          "y": 170
        },
        "z": 1,
        "embeds": [],
        "isrelatedto": [
          "f537b5a1-831e-459e-a3dc-3f747ae4dbdc",
          "b0f32149-1c22-4a1a-8050-1afa73f4d2b4"
        ]
      },
      "619135e8-68f4-4236-a590-4ac50b07d936": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": -220,
          "y": 180
        },
        "z": 1,
        "embeds": []
      },
      "222a4cbf-e0d8-46b9-b138-43c7ba1e6f0e": {
        "source": {
          "id": "58fd41f7-687b-4dc9-b813-e8cb233cfd0a"
        },
        "target": {
          "id": "619135e8-68f4-4236-a590-4ac50b07d936"
        },
        "z": 2
      }
    }
  }
}
